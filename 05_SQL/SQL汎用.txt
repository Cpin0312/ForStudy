〇対象シーケンスの最大値を取得
∟SELECT last_value from "koza_no_seq";

〇対象シーケンスの値を設定する
∟SELECT SETVAL('"koza_no_seq"',4);

〇対象シーケンスの値+指定値を設定する
∟SELECT SETVAL('"koza_no_seq"',(SELECT last_value from "koza_no_seq") + 100000 );

〇対象シーケンスを一回進める
∟SELECT nextval('koza_no_seq');

〇対象シーケンスをすすむ
∟SELECT SETVAL('"uriage_no_seq"',(SELECT CAST(MAX(uriage_no) as Integer) FROM t_uriage_meisai_toujitu)+1 );

〇対象シーケンスの現在値を取得
∟SELECT currval('koza_no_seq');

〇シーケンスとテーブルの比較
∟SELECT  MAX(last_value) AS "口座採番" ,MAX(koza_no) AS "登録口座" FROM koza_no_seq,m_koza;

〇Db削除SQL（おかしい）
∟SELECT 'TRUNCATE ' || input_table_name || ' CASCADE;' AS truncate_query FROM(SELECT table_schema || '.' || table_name AS input_table_name FROM information_schema.tables WHERE table_schema NOT IN ('pg_catalog', 'information_schema') AND table_schema NOT LIKE 'pg_toast%') AS information;

〇Db削除SQL（おかしい）
∟DROP DATABASE [ IF EXISTS ] name

〇DB全テーブルの削除
∟DROP SCHEMA public CASCADE; CREATE SCHEMA public; GRANT ALL ON SCHEMA public TO postgres; GRANT ALL ON SCHEMA public TO public;

〇テーブル・項目の検索
∟SELECT  PSAT.RELNAME AS TABLE_NAME  , PA.ATTNAME AS COLUMN_NAME  , MAX(PD.DESCRIPTION) AS COLUMN_COMMENT  , MAX(DATA_TYPE) AS DATA_TYPE  , MAX(COALESCE(COALESCE(NUMERIC_PRECISION,CHARACTER_MAXIMUM_LENGTH),DATETIME_PRECISION)) AS NUM_DIGITS , IC.IS_NULLABLE AS NULLABLE  FROM INFORMATION_SCHEMA.COLUMNS IC INNER JOIN  PG_STAT_ALL_TABLES PSAT ON IC.TABLE_NAME = PSAT.RELNAME  INNER JOIN  PG_ATTRIBUTE PA  ON IC.COLUMN_NAME = PA.ATTNAME  LEFT JOIN PG_DESCRIPTION PD ON PD.OBJOID = PSAT.RELID  AND PD.OBJOID=PA.ATTRELID AND PD.OBJSUBID=PA.ATTNUM  WHERE  IC.TABLE_SCHEMA = 'public'  GROUP BY PSAT.RELNAME,PA.ATTNAME,IC.IS_NULLABLE ORDER BY PSAT.RELNAME,COLUMN_NAME;

〇項目のコメント
∟select psat.relname as TABLE_NAME, pa.attname as COLUMN_NAME, pd.description as COLUMN_COMMENT from pg_stat_all_tables psat ,pg_description     pd ,pg_attribute       pa where pa.attname like '%_pt' and psat.relid=pd.objoid and pd.objoid=pa.attrelid and pd.objsubid=pa.attnum order by pd.objsubid ;

〇テーブルのコメント
∟select psut.relname   as TABLE_NAME ,pd.description as TABLE_COMMENT from pg_stat_user_tables psut ,pg_description      pd where  psut.relid=pd.objoid ;

〇ビューの作成
∟CREATE VIEW V4 AS SELECT bang,uria FROM tb WHERE uria>100 WITH CHECK OPTION;

〇ビューの削除（権限要注意）
∟DROP VIEW IF EXISTS V1;

〇Pkey確認
∟SELECT  STABLE.TABLE_NAME AS "TBL名称" ,BASE.COLUMN_NAME AS "項目名称" ,BASE.CONSTRAINT_NAME AS "PK名称" FROM  INFORMATION_SCHEMA.TABLES STABLE LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE  BASE ON STABLE.TABLE_NAME =BASE.TABLE_NAME LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE BASECHECK  ON  BASE.TABLE_NAME = BASECHECK.TABLE_NAME  --AND  BASE.CONSTRAINT_NAME =  BASECHECK.CONSTRAINT_NAME AND  BASECHECK.CONSTRAINT_NAME LIKE 'PK%'  WHERE STABLE.TABLE_TYPE = 'BASE TABLE' AND (  STABLE.TABLE_NAME LIKE 'm%'  OR STABLE.TABLE_NAME LIKE 'mi%'  OR STABLE.TABLE_NAME LIKE 'o%'  OR STABLE.TABLE_NAME LIKE 't%'  OR STABLE.TABLE_NAME LIKE 'w%' ) --AND COALESCE(BASE.COLUMN_NAME,'') = ''  GROUP BY STABLE.TABLE_NAME ,BASE.COLUMN_NAME ,BASE.CONSTRAINT_NAME ORDER BY BASE.COLUMN_NAME DESC ,STABLE.TABLE_NAME;

〇全テーブル名取得
∟SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE UPPER(TABLE_SCHEMA)=UPPPER('PUBLIC') AND UPPER(TABLE_TYPE)=UPPER('BASE TABLE');

〇対象テーブルのデータ件数
∟SELECT RELNAME, N_TUP_INS - N_TUP_DEL AS ROWCOUNT FROM PG_STAT_ALL_TABLES WHERE UPPER(RELNAME) LIKE ('MI_%') OR UPPER(RELNAME) LIKE ('M_%') OR UPPER(RELNAME) LIKE ('T_%') OR UPPER(RELNAME) LIKE ('W_%') OR UPPER(RELNAME) LIKE ('OPE%') OR UPPER(RELNAME) LIKE ('MIO%') ORDER BY ROWCOUNT DESC

〇対象テーブルのデータ件数（おかしい）
∟SELECT NSPNAME AS SCHEMANAME,RELNAME,RELTUPLES FROM PG_CLASS C LEFT JOIN PG_NAMESPACE N ON (N.OID = C.RELNAMESPACE) WHERE NSPNAME NOT IN ('PG_CATALOG', 'INFORMATION_SCHEMA') AND RELKIND='R' AND UPPER(RELNAME) IN  ( 'MIOPERATORS') ORDER BY RELTUPLES DESC;

〇TBLの詳細を取得
∟SELECT UPPER(PA.ATTNAME) AS COLUMN_NAME  , UPPER(MAX(PD.DESCRIPTION)) AS COLUMN_COMMENT  , CASE WHEN UPPER(MAX(IC.DATA_TYPE)) = 'CHARACTER' THEN 'CHAR' WHEN UPPER(MAX(IC.DATA_TYPE)) = 'CHARACTER VARYING' THEN 'VARCHAR' WHEN UPPER(MAX(IC.DATA_TYPE)) = 'TIMESTAMP WITHOUT TIME ZONE' THEN 'TIMESTAMP' ELSE UPPER(MAX(IC.DATA_TYPE)) END AS DATA_TYPE  , MAX(COALESCE(COALESCE(IC.NUMERIC_PRECISION,IC.CHARACTER_MAXIMUM_LENGTH),IC.DATETIME_PRECISION)) AS NUM_DIGITS , UPPER(IC.IS_NULLABLE) AS NULLABLE, BASE.CONSTRAINT_NAME, ICOL.ORDINAL_POSITION FROM INFORMATION_SCHEMA.COLUMNS IC INNER JOIN  PG_STAT_ALL_TABLES PSAT ON IC.TABLE_NAME = PSAT.RELNAME INNER JOIN  PG_ATTRIBUTE PA  ON IC.COLUMN_NAME = PA.ATTNAME LEFT JOIN PG_DESCRIPTION PD ON PD.OBJOID = PSAT.RELID  AND PD.OBJOID=PA.ATTRELID AND PD.OBJSUBID=PA.ATTNUM LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE  BASE ON IC.TABLE_NAME =BASE.TABLE_NAME AND BASE.COLUMN_NAME = PA.ATTNAME LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE  BASECHECK  ON  BASE.TABLE_NAME = BASECHECK.TABLE_NAME LEFT JOIN INFORMATION_SCHEMA.COLUMNS ICOL ON IC.TABLE_NAME =ICOL.TABLE_NAME AND ICOL.COLUMN_NAME = PA.ATTNAME WHERE  IC.TABLE_SCHEMA = 'PUBLIC' AND PSAT.RELNAME = LOWER('MIOPERATORS') GROUP BY PSAT.RELNAME,PA.ATTNAME,IC.IS_NULLABLE ,BASE.CONSTRAINT_NAME,ICOL.ORDINAL_POSITION ORDER BY ICOL.ORDINAL_POSITION;

〇当日を取得
∟to_char(current_timestamp, 'yyyyMMdd')

〇当日を取得
∟to_char(current_timestamp, 'yyyymmddhh24missms')

〇前日を取得
∟to_char(current_timestamp - interval '1 day'

〇テーブル名称の取得
∟SELECT PSUT.RELNAME  AS TABLE_NAME ,PD.DESCRIPTION AS TABLE_COMMENT FROM PG_STAT_USER_TABLES PSUT LEFT JOIN PG_DESCRIPTION PD ON PSUT.RELID=PD.OBJOID AND PD.OBJSUBID=0 WHERE PSUT.RELNAME IN (SELECT RELNAME AS TABLE_NAME FROM PG_STAT_USER_TABLES) ORDER BY PSUT.RELNAME ; 